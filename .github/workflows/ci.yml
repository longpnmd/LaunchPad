name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    environment: RELEASE # Chỉ định Environment RELEASE
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Create .env file for Docker Compose
      - name: Set up environment variables
        run: |
          echo "NEXT_WEBSITE_URL=${{ vars.NEXT_WEBSITE_URL }}" >> .env
          echo "NEXT_PORT=${{ vars.NEXT_PORT }}" >> .env
          echo "NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}" >> .env
          echo "NEXT_IMAGE_HOSTNAME=${{ vars.NEXT_IMAGE_HOSTNAME }}" >> .env
          echo "NEXT_PREVIEW_SECRET=${{ secrets.NEXT_PREVIEW_SECRET }}" >> .env
          echo "STRAPI_HOST=${{ vars.STRAPI_HOST }}" >> .env
          echo "STRAPI_PORT=${{ vars.STRAPI_PORT }}" >> .env
          echo "STRAPI_APP_KEYS=${{ secrets.STRAPI_APP_KEYS }}" >> .env
          echo "STRAPI_API_TOKEN_SALT=${{ secrets.STRAPI_API_TOKEN_SALT }}" >> .env
          echo "STRAPI_TRANSFER_TOKEN_SALT=${{ secrets.STRAPI_TRANSFER_TOKEN_SALT }}" >> .env
          echo "STRAPI_ADMIN_JWT_SECRET=${{ secrets.STRAPI_ADMIN_JWT_SECRET }}" >> .env
          echo "STRAPI_JWT_SECRET=${{ secrets.STRAPI_JWT_SECRET }}" >> .env
          echo "STRAPI_ADMIN_CLIENT_URL=${{ vars.STRAPI_ADMIN_CLIENT_URL }}" >> .env
          echo "STRAPI_ADMIN_CLIENT_PREVIEW_SECRET=${{ secrets.STRAPI_ADMIN_CLIENT_PREVIEW_SECRET }}" >> .env
          echo "STRAPI_CLIENT_URL=${{ vars.STRAPI_CLIENT_URL }}" >> .env
          echo "STRAPI_PREVIEW_SECRET=${{ secrets.STRAPI_PREVIEW_SECRET }}" >> .env

      # Build and run Docker Compose
      - name: Build and run Docker Compose
        run: |
          docker compose down || true
          docker compose up --build -d

      # Check logs
      - name: Check logs
        run: |
          docker compose logs

      # Verify health status
      # - name: Verify health status
      #   run: |
      #     docker inspect --format='{{json .State.Health.Status}}' strapi

      # Debug .env file
      - name: Debug .env file
        run: cat .env