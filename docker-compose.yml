services:
  nextjs:
    container_name: launchpad-nextjs
    build:
      context: ./next
      dockerfile: Dockerfile
      args:
        - RUN yarn install --frozen-lockfile && yarn cache clean
    ports:
      - "${NEXT_PORT}:${NEXT_PORT}"
    environment:
      - NODE_ENV=production
      - PORT=${NEXT_PORT}
      - WEBSITE_URL=${NEXT_WEBSITE_URL}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - PREVIEW_SECRET=${NEXT_PREVIEW_SECRET}
      - IMAGE_HOSTNAME=${NEXT_IMAGE_HOSTNAME}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`launchpad.${BASE_DOMAIN}`)"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.tls.certresolver=myresolver"
      - "traefik.http.services.nextjs.loadbalancer.server.port=${NEXT_PORT}"
    depends_on:
      - strapi
    restart: always

  strapi:
    container_name: launchpad-strapi
    build:
      context: ./strapi
      dockerfile: Dockerfile
      args:
        - RUN yarn install --frozen-lockfile && yarn cache clean
    ports:
      - "${STRAPI_PORT}:${STRAPI_PORT}"
    environment:
      - NODE_ENV=production
      - HOST=${STRAPI_HOST}
      - PORT=${STRAPI_PORT}
      - APP_KEYS=${STRAPI_APP_KEYS}
      - API_TOKEN_SALT=${STRAPI_API_TOKEN_SALT}
      - TRANSFER_TOKEN_SALT=${STRAPI_TRANSFER_TOKEN_SALT}
      - ADMIN_JWT_SECRET=${STRAPI_ADMIN_JWT_SECRET}
      - JWT_SECRET=${STRAPI_JWT_SECRET}
      - STRAPI_ADMIN_CLIENT_URL=${STRAPI_ADMIN_CLIENT_URL}
      - STRAPI_ADMIN_CLIENT_PREVIEW_SECRET=${STRAPI_ADMIN_CLIENT_PREVIEW_SECRET}
      - CLIENT_URL=${STRAPI_CLIENT_URL}
      - PREVIEW_SECRET=${STRAPI_PREVIEW_SECRET}
      - STRAPI_ADMIN_BACKEND_URL=${STRAPI_ADMIN_BACKEND_URL}
      - STRAPI_TELEMETRY_DISABLED=${STRAPI_TELEMETRY_DISABLED}
      - ADMIN_PATH=${STRAPI_ADMIN_PATH}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.strapi.rule=Host(`launchpad-admin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.strapi.entrypoints=websecure"
      - "traefik.http.routers.strapi.tls.certresolver=myresolver"
      - "traefik.http.services.strapi.loadbalancer.server.port=${STRAPI_PORT}"
    volumes:
      - ../data:/app/data
      - ../public/uploads:/app/public/uploads
      - ../.tmp:/app/.tmp 
    user: "node"
    restart: always

  traefik:
    container_name: traefik
    image: traefik:v2.10
    restart: always
    env_file:
      - .env
    environment:
      - TRAEFIK_CERTIFICATESRESOLVERS_LE_ACME_STORAGE=/letsencrypt/acme.json
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --entryPoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --providers.docker=true
      - --providers.docker.watch=true
      - --providers.docker.network=web
      - --providers.file.watch=true
      - --providers.file.directory=/config/
      - --certificatesresolvers.myresolver.acme.email=${CER_ACME_EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik.yaml:/config/traefik.yaml
      - ./config/.htpasswd:/config/.htpasswd
      - ../letsencrypt:/letsencrypt